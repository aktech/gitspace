{"version":3,"sources":["Chart.js","Form.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["theme","axis","tickColor","ticks","text","fontSize","fontFamily","fontWeight","legend","fill","Chart","props","getAllBars","bars","remainingSize","data","length","dataToFill","slice","lastBar","remainingElements","reverse","forEach","element","push","key","repoName","id","value","size","index","indexValue","x","y","width","height","color","concat","formatSize","Math","round","Number","EPSILON","LabelText","barsAppended","labels","map","textAnchor","className","style","state","labelPosition","max","this","repos","keys","indexBy","margin","top","right","bottom","left","padding","layout","layers","colors","colorBy","borderColor","from","modifiers","axisTop","enableLabel","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","format","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","tooltipFormat","Component","Form","handleUsernameChange","event","setState","username","target","resetPageState","responseData","fetchPage","fetchMore","invalidUser","unknownError","success","handleSubmit","loading","sizeMessage","preventDefault","fetchRepos","then","formatResponseData","noRepos","chartData","totalSize","name","repoSize","sort","a","b","renderChart","url","url_with_pagination","fetch","response","json","status","onSubmit","type","placeholder","onChange","role","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3972301.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\n// These two values must be close enough for the size label to be placed correctly\nconst yAxisDiff = 64\nconst barHeight = 70\n\nconst theme = {\n    axis: {\n        tickColor: \"#eee\",\n        ticks: {\n            text: {\n                fontSize: \"18px\",\n                fontFamily: \"Lato, sans-serif\",\n                fontWeight: \"bold\"\n            }\n        },\n        legend: {\n            text: {\n                fontSize: \"20px\",\n                fontFamily: \"Lato, sans-serif\",\n                fontWeight: \"bold\",\n                fill: '#165f77'\n            }\n        }\n    }\n};\n\n\nclass Chart extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            labelPosition: null\n        }\n    }\n\n    getAllBars = (bars) => {\n        const remainingSize = this.props.data.length - bars.length\n        const dataToFill = this.props.data.slice(0, remainingSize)\n        let lastBar = bars[0]\n        let remainingElements = []\n        dataToFill.reverse()\n        dataToFill.forEach(element => {\n            remainingElements.push({\n                    key: element.repoName,\n                    data: {\n                        id: \"size\", value: element.size, index: 20, indexValue: element.repoName,\n                        data: {\n                            repoName: element.repoName,\n                            size: element.size\n                        }\n                    },\n                    x: 0,\n                    y: lastBar.y + yAxisDiff,\n                    width: 1,\n                    height: 58,\n                    color: \"#e8c1a0\"\n                }\n            )\n            lastBar = remainingElements[remainingElements.length - 1]\n        })\n        remainingElements.reverse()\n        return remainingElements.concat(bars)\n    }\n\n    formatSize = (size) => {\n        let humanReadableSize\n        if (size < 512) {\n            humanReadableSize = `${size} KiB`\n        } else if (size < 1024 * 1024) {\n            humanReadableSize = `${Math.round((size/1024 + Number.EPSILON) * 100) / 100} MiB`\n        } else {\n            humanReadableSize = `${Math.round((size/(1024*1024) + Number.EPSILON) * 100) / 100} GiB`\n        }\n        return humanReadableSize\n    }\n\n    LabelText = ({ bars }) => {\n        const barsAppended = this.getAllBars(bars)\n        let labels = barsAppended.map(({ key, x, y, width, height }, index) => {\n            return (\n                <text textAnchor=\"middle\" className=\"foobarclass\" x={width+50} y={y + height/2.1} style={{\n                    \"fontSize\": \"14px\",\n                    \"fontFamily\": \"'Slabo 27px', serif\"\n                }} key={index}>\n                    {this.formatSize(barsAppended[index].data.value)}\n                </text>\n            )\n        })\n        return <g>{labels}</g>\n    }\n\n\n    render() {\n\n        return (\n        <div style={{height: Math.max(700, this.props.repos.length * barHeight)}} className=\"bar-chart\">\n            <ResponsiveBar\n                data={this.props.data}\n                keys={[\"size\"]}\n                indexBy=\"repoName\"\n                margin={{ top: 50, right: 300, bottom: 300, left: 300 }}\n                padding={0.1}\n                layout=\"horizontal\"\n                layers={[\"grid\", \"axes\", \"bars\", this.LabelText, \"markers\", \"legends\"]}\n                colors={{\"scheme\": \"nivo\"}}\n                colorBy=\"index\"\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                axisTop={null}\n                enableLabel={false}\n                axisBottom={{\n                    tickSize: 10,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'MiB',\n                    legendPosition: 'middle',\n                    legendOffset: 70,\n                    format: value => Math.round((value/1024 + Number.EPSILON))\n                }}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n                theme={theme}\n                tooltipFormat={value => value + ' KiB'}\n                />\n        </div>\n        )\n    }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport Chart from \"./Chart\";\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: \"\",\n            renderChart: true,\n            responseData: [],\n            chartData: null,\n            repos: null,\n            loading: false,\n            success:false,\n            sizeMessage:false,\n            fetchPage: 1,\n            fetchMore: true,\n            invalidUser: false,\n            noRepos: false,\n            unknownError: false,\n            totalSize: 0\n        }\n        this.responseData = []\n        this.fetchPage = 1\n        this.fetchMore = true\n        this.invalidUser = false\n        this.noRepos = false\n        this.unknownError = false\n        this.success = false\n    }\n\n    handleUsernameChange = (event) => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    async fetchRepos() {\n        if (!this.fetchMore) {\n            return\n        }\n        const url = `https://api.github.com/users/${this.state.username}/repos?per_page=100`\n        const url_with_pagination = `${url}&page=${this.fetchPage}`\n        const response = await fetch(url_with_pagination)\n        const responseData = await response.json()\n\n        if (response.status === 404) {\n            this.invalidUser = true\n            return\n        }\n\n        if (response.status !== 200) {\n            this.unknownError = true\n            this.loading = false\n            this.success = false\n            return\n        }\n\n        if (responseData.length === 0) {\n            this.fetchMore = false\n            this.loading = false\n            this.success = false\n\n            if (this.responseData.length === 0) {\n                this.noRepos = true\n            }\n            return\n        }\n\n        this.responseData = this.responseData.concat(responseData)\n        this.fetchPage = this.fetchPage + 1\n        await this.fetchRepos()\n    }\n\n    resetPageState = () => {\n        this.responseData = []\n        this.fetchPage = 1\n        this.fetchMore = true\n        this.invalidUser = false\n        this.unknownError = false\n        this.success = false\n    }\n\n    handleSubmit = (event) => {\n        this.setState({\n            loading: true,\n            invalidUser: false,\n            sizeMessage: false\n        });\n        event.preventDefault()\n\n        this.fetchRepos().then(() => {\n            if (this.responseData.length !== 0) {\n                this.formatResponseData()\n            } else {\n                this.setState({\n                    success: false,\n                    sizeMessage: false,\n                    invalidUser: this.invalidUser,\n                    unknownError: this.unknownError,\n                    noRepos: this.noRepos\n                })\n            }\n            this.resetPageState()\n            this.setState({ loading: false });\n        })\n\n    }\n\n    formatResponseData = () => {\n        let chartData = [];\n        let repos = []\n        let totalSize = 0\n        this.responseData.forEach(element => {\n            repos.push(element.name)\n            totalSize += element.size\n            // let repoSize = element.size / 1024\n            let repoSize = element.size\n            chartData.push({\n                \"repoName\": element.name,\n                \"size\": repoSize,\n            })\n        });\n\n        chartData.sort(function(a, b) {\n            return a.size - b.size;\n        });\n\n        this.setState({\n            chartData: chartData,\n            repos: repos,\n            success: true,\n            sizeMessage: true,\n            invalidUser: false,\n            unknownError: false,\n            noRepos: false,\n            totalSize: Math.round((totalSize / (1024*1024) + Number.EPSILON) * 100) / 100\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.handleSubmit} className=\"username-input-form\">\n                <input type=\"text\" className=\"username-input\" placeholder=\"Github Username\" value={this.state.username}\n                       onChange={this.handleUsernameChange}/>\n            </form>\n                {this.state.loading?\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div> : null\n                }\n                {this.state.invalidUser?\n                    <div className=\"alert alert-warning message\" role=\"alert\">\n                        You sure that's a Github username?\n                    </div> : null\n                }\n                {this.state.noRepos?\n                    <div className=\"alert alert-warning message\" role=\"alert\">\n                        This person doesn't seems to have any repositories, what are you trying to see the space for?\n                    </div> : null\n                }\n                {this.state.unknownError?\n                    <div className=\"alert alert-danger message\" role=\"alert\">\n                        Something went wrong!\n                    </div> : null\n                }\n                {this.state.sizeMessage ?\n                    <div className=\"alert alert-info message\">Total space occupied: {this.state.totalSize} GiB</div> : null\n                }\n                {this.state.success ?\n                    <Chart data={this.state.chartData} repos={this.state.repos}/> : null\n                }\n\n            </div>\n        );\n    }\n\n}\n\nexport default Form;\n","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <p>Source code at <a className=\"footer-text\" href=\"http://github.com/aktech/\">Github</a> • Made with 🖤 by <a className=\"footer-text\" href=\"http://github.com/aktech/\">Amit</a></p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <h1 className=\"site-title\">Gitspace</h1>\n                <h2 className=\"desc\">Know the space occupied by your public repositories.</h2>\n                <Form/>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}